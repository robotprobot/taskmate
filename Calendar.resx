<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>